{"version":3,"file":"tiny-vue.esm.js","sources":["../src/tiny-core/LanguageTranslator.ts","../src/tiny-core/Debug.ts","../src/tiny-core/index.ts","../src/shared/shapeFlags.ts","../src/shared/toDisplayString.ts","../src/shared/index.ts","../src/runtime-core/vnode.ts","../src/runtime-core/h.ts","../src/runtime-core/createApp.ts","../src/runtime-core/componentProps.ts","../src/runtime-core/componentSlots.ts","../src/runtime-core/componentEmits.ts","../src/runtime-core/componentPublicInstance.ts","../src/reactivity/src/dep.ts","../src/reactivity/src/effect.ts","../src/reactivity/src/baseHandlers.ts","../src/reactivity/src/reactive.ts","../src/reactivity/src/ref.ts","../src/reactivity/src/computed.ts","../src/runtime-core/component.ts","../src/runtime-core/apiInject.ts","../src/runtime-core/helpers/renderSlot.ts","../src/runtime-core/scheduler.ts","../src/runtime-core/componentRenderUtils.ts","../src/runtime-core/renderer.ts","../src/runtime-dom/index.ts","../src/compiler-core/src/runtimeHelpers.ts","../src/compiler-core/src/codegen.ts","../src/compiler-core/src/parse.ts","../src/compiler-core/src/transform.ts","../src/compiler-core/src/transforms/transformExpression.ts","../src/compiler-core/src/compile.ts","../src/index.ts"],"sourcesContent":["// LANGUAGE = cn yarn build\n// LANGUAGE 环境变量可以控制打包的语言\n//  map\nconst c2eMap = {\n    你好: \"hello\",\n    \"调用 patch\": \"call patch function\",\n};\n\nconst e2cMap = {\n    hello: \"你好\",\n};\n\nexport default class languageTranslator {\n    private currentLanguage: string;\n    constructor() {\n        this.currentLanguage = process.env.LANGUAGE || 'cn';\n    }\n\n    private get currentMap(): any {\n        return this.currentLanguage === \"cn\" ? e2cMap : c2eMap;\n    }\n\n    transition(text) {\n        const result = this.currentMap[text];\n        return result ? result : text\n    }\n}\n","export default class Debug {\n    private languageTranslator: any\n    constructor(languageTranslator) {\n        // 文本转换器 for support english\n        this.languageTranslator = languageTranslator\n    }\n\n    mainPath(text) {\n        return window.console.log.bind(\n            window.console,\n            `%c[ mainPath ] ${this.languageTranslator.transition(text)}`,\n            \"color:red\"\n        )\n    }\n}","import languageTranslator from \"./LanguageTranslator\";\nimport Debug from \"./Debug\";\n\nconst debug = new Debug(new languageTranslator())\nwindow['debug'] = debug","// 组件的类型\nexport const enum ShapeFlags {\n    // 标签类型\n    ELEMENT = 1,\n    // 组件类型\n    STATEFUL_COMPONENT = 1 << 2,\n    // vnode 的 children 为 string 类型\n    TEXT_CHILDREN = 1 << 3,\n    // vnode 的 children 为数组类型\n    ARRAY_CHILDREN = 1 << 4,\n    // vnode 的 children 为 slots 类型\n    SLOTS_CHILDREN = 1 << 5\n}","export const toDisplayString = (val) => {\n  return String(val);\n};\n","export * from \"./shapeFlags\";\nexport * from './toDisplayString'\n\n// 是否为对象\nexport const isObject = (val) => {\n    return val !== null && typeof val === 'object'\n}\n\n// 对象复制\nexport const extend = Object.assign\nexport function hasChanged(value, oldValue) {\n    return !Object.is(value, oldValue)\n}\n\nexport function hasOwn(val, key) {\n    return Object.prototype.hasOwnProperty.call(val, key)\n}\n\n// 以 on + 一个大写字母开头\nexport const isOn = (key) => /^on[A-Z]/.test(key) \n\nconst camelizeRE = /-(\\w)/g;\n\n/**\n * @description: 连接符命名转驼峰命名\n * @param {string} str\n * @return {*}\n */\nexport const camelize = (str: string): string => {\n    return str.replace(camelizeRE, (_, $1) => ($1 ? $1.toUpperCase() : \"\"));\n};\n\n/**\n * @private\n * @description: 首字母大写\n * @param {string} str\n */\nexport const capitalize = (str: string) =>\n    str.charAt(0).toUpperCase() + str.slice(1);\n\n/**\n * @private\n * @description: 添加 on 前缀\n * @param {string} str\n * @return {*}\n */\nexport const toHandlerKey = (str: string) =>\n    str ? `on${capitalize(str)}` : ``;\n","import { ShapeFlags } from \"../shared\";\n\n/**\n * @description: 创建虚拟节点\n * @param {any} type 节点类型\n * @param {any} props 节点上的属性\n * @param {any} children 子节点\n * @return {VNode}\n */\nexport const createVNode = function (\n    type: any,\n    props?: any,\n    children?: string | Array<any>\n): any {\n    const vnode = {\n        el: null,\n        component: null,\n        key: props?.key,\n        type,\n        props: props || {},\n        children,\n        shapeFlag: getShapeFlag(type),\n    };\n\n    // 存在子节点\n    if (Array.isArray(children)) {\n        // 按位或运算，重设 shapeFlag 标识\n        vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN;\n    } else if (typeof children === \"string\") {\n        vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN;\n    }\n\n    normalizeChildren(vnode, children);\n\n    return vnode;\n};\n\n// 判断组件类型 (标签或组件)\nfunction getShapeFlag(type: any): any {\n    return typeof type === \"string\"\n        ? ShapeFlags.ELEMENT\n        : ShapeFlags.STATEFUL_COMPONENT;\n}\n\nexport function normalizeChildren(vnode, children) {\n    if (typeof children === \"object\") {\n        // 标识 slots_children 类型\n        if (vnode.shapeFlag & ShapeFlags.ELEMENT) {\n        } else {\n            vnode.shapeFlag |= ShapeFlags.SLOTS_CHILDREN;\n        }\n    }\n}\n\n// 标准化 vnode 格式\n// 让 child 支持多种格式\nexport function normalizeVNode(child) {\n    // 暂时只支持处理 child 为 string 和 number 的情况\n    return createVNode(Text, null, String(child));\n}\n\n// Text 使用 Symbol 唯一标识\nexport const Text = Symbol(\"Text\");\nexport const Fragment = Symbol(\"Fragment\");\n\nexport function createTextVNode(text: string = \"\") {\n    return createVNode(Text, {}, text);\n}\n","import { createVNode } from \"./vnode\";\nexport const h = function (\n    type: any,\n    props: any,\n    children: string | Array<any>\n): any {\n    return createVNode(type, props, children);\n};\n","import { createVNode } from \"./vnode\";\nexport function createAppAPI(render) {\n    return function createApp(rootComponent) {\n        const app = {\n            _component: rootComponent,\n            mount(rootContainer: any) {\n                console.log(\"基于根组件创建 vnode\");\n                const vnode = createVNode(rootComponent);\n                console.log(\"调用 render，基于 vnode 进行开箱\");\n                render(vnode, rootContainer);\n            },\n        };\n\n        return app;\n    };\n}\n","export function initProps(instance, rawProps) {\n    // 1. props\n    console.log('initProps');\n    instance.props = rawProps\n    // 2. attrs\n}","import { ShapeFlags } from \"../shared\";\nexport function initSlots(instance, children) {\n    const { vnode } = instance;\n\n    if (vnode.shapeFlag & ShapeFlags.SLOTS_CHILDREN) {\n        normalizeObjectSlots(children, (instance.slots = {}));\n    }\n}\n\nconst normalizeSlotValue = (value) => {\n    // 把 function 返回的值转换成 array ，这样 slot 就可以支持多个元素了\n    return Array.isArray(value) ? value : [value];\n};\n\nconst normalizeObjectSlots = (rawSlots, slots) => {\n    for (const key in rawSlots) {\n        const value = rawSlots[key];\n        if (typeof value === \"function\") {\n            // 如果是函数，则存入到 slots上\n            slots[key] = (props) => normalizeSlotValue(value(props));\n        }\n    }\n};\n","import { toHandlerKey, camelize } from \"../shared\";\n\nexport function emit(instance, event: string, ...rawArgs) {\n    const props = instance.props\n    const handlerName = toHandlerKey(camelize(event))\n    // const handlerName = 'on' + event.substring(0, 1).toUpperCase() + event.substring(1)\n    console.log(`方法名为: ${handlerName} 的事件被触发了。 参数为:${rawArgs}`);\n    const handler = props[handlerName]\n    handler && handler(...rawArgs)\n}","import { hasOwn } from \"../shared\";\n\nconst publicPropertiesMap = {\n    // 当用户调用 instance.proxy.$emit 时会触发\n    $el: (i) => i.vnode.el,\n    $emit: (i) => i.emit,\n    $slots: (i) => i.slots,\n    $props: (i) => i.props,\n};\n\nexport const PublicInstanceProxyHandlers = {\n    get({ _: instance }, key) {\n        const { setupState, props } = instance;\n        console.log(\"触发 proxy 的 hook. key: \", key);\n\n        // 不是 $, 检测 是否在setupState 中\n        if (key[0] !== \"$\") {\n            // 先检测访问的 key 是否存在于 setupState 中, 是的话直接返回\n            if (hasOwn(setupState, key)) {\n                return setupState[key];\n            } else if (hasOwn(props, key)) {\n                return props[key];\n            }\n        }\n        const publicGetter = publicPropertiesMap[key];\n\n        if (publicGetter) {\n            return publicGetter(instance);\n        }\n    },\n    set({ _: instance }, key, value) {\n        const { setupState } = instance;\n\n        if (Object.keys(setupState).length > 0 && hasOwn(setupState, key)) {\n            setupState[key] = value;\n        }\n        return true\n    },\n};\n","// 存储所有的 effect 对象\nexport function createDep(effects?) {\n    const dep = new Set(effects)\n    return dep\n}","import { createDep } from \"./dep\";\nimport { extend } from \"../../shared/index\";\n\n// 当前的 effect\nlet activeEffect = void 0;\n// 追踪标识\nlet shouldTrack = false;\n// 存储 Map\nconst targetMap = new WeakMap();\n\n// 依赖收集\nexport class ReactiveEffect {\n    active = true;\n    deps = [];\n    public onStop?: () => void;\n\n    constructor(public fn, public scheduler?) {\n        console.log(`创建 ReactiveEffect 对象`);\n    }\n\n    run() {\n        // 执行副作用函数\n        console.log(\"run\");\n\n        // 执行 fn, 但是不收集依赖\n        if (!this.active) {\n            return this.fn();\n        }\n\n        // 执行 fn 收集依赖\n        // 可以开始收集依赖了\n        shouldTrack = true;\n\n        // 给全局的 activeEffect 赋值\n        activeEffect = this as any;\n\n        console.log(\"执行 副作用函数 fn\");\n        const result = this.fn();\n        // 重置\n        shouldTrack = false;\n        activeEffect = undefined;\n        return result;\n    }\n\n    stop() {\n        if (this.active) {\n            // 如果第一次执行 stop 后 active 就 false\n            // 防止重复调用\n            cleanupEffect(this);\n            if (this.onStop) {\n                this.onStop();\n            }\n            this.active = false;\n        }\n    }\n}\n\nexport function effect(fn, options = {}) {\n    const _effect = new ReactiveEffect(fn);\n    extend(_effect, options);\n    _effect.run();\n\n    const runner: any = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\n\nexport function stop(runner) {\n    runner.effect.stop();\n}\n\n// 追踪依赖\nexport function track(target, type, key) {\n    console.log(`触发 track -> target: ${target} type: ${type} key:${key}`);\n    if (!activeEffect) return;\n\n    if (!isTracking()) return;\n\n    /*\n- WeakMap\n    key: object\n    value: map\n        - map\n        key: property\n        value: set\n        - set\n            [effect1、effect2]\n */\n    // 对象-属性-副作用\n    // 根据对象查找相应的属性\n    let depsMap = targetMap.get(target);\n    // 未找到则初始化，并赋值\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map()));\n    }\n    // 根据属性值查找对应的副作用函数\n    let dep = depsMap.get(key);\n    // 未找到则初始化，并赋值\n    if (!dep) {\n        depsMap.set(key, (dep = createDep()));\n    }\n    trackEffects(dep);\n}\n\n// 触发依赖\nexport function trigger(target, type, key) {\n    let deps: Array<any> = [];\n\n    const depsMap = targetMap.get(target);\n\n    if (!depsMap) return;\n\n    const dep = depsMap.get(key);\n\n    deps.push(dep);\n\n    const effects: Array<any> = [];\n    deps.forEach((dep) => {\n        // 解构 dep 得到的是 dep 内部存储的 effect\n        effects.push(...dep);\n    });\n    triggerEffects(createDep(effects));\n}\n\nexport function triggerEffects(dep) {\n    for (const effect of dep) {\n        // 调度器存在，则把响应事件交给用户处理\n        if (effect.scheduler) {\n            effect.scheduler();\n        } else {\n            // 直接执行副作用函数\n            effect.run();\n        }\n    }\n}\n\nexport function trackEffects(dep) {\n    // 用 dep 存放 effect\n    if (!activeEffect) return;\n\n    if (!dep.has(activeEffect)) {\n        dep.add(activeEffect);\n        (activeEffect as any).deps.push(dep);\n    }\n}\n\nexport function isTracking() {\n    return activeEffect !== undefined && shouldTrack;\n}\n\nfunction cleanupEffect(effect) {\n    // 找到所有依赖这个 effect 的响应式对象\n    // 从这些响应式对象里面把 effect 给删除掉\n    effect.deps.forEach((dep) => {\n        dep.delete(effect);\n    });\n    effect.deps.length = 0;\n}\n","import { track, trigger } from \"./effect\";\nimport {\n    ReactiveFlags,\n    reactive,\n    reactiveMap,\n    readonly,\n    readonlyMap,\n    shallowReadonlyMap,\n} from \"./reactive\";\nimport { isObject } from \"../../shared/index\";\n\nconst get = createGetter();\nconst set = createSetter();\nconst readonlyGet = createGetter(true)\nconst shallowReadonlyGet = createGetter(true, true)\n\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        // console.log(\n        //     \"Proxy get 函数触发了. target:\",\n        //     JSON.stringify(target),\n        //     \"key: \",\n        //     key\n        // );\n\n        // reactive 原始值\n        const isExistInReactiveMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === reactiveMap.get(target)\n            );\n        };\n\n        // readonly 原始值\n        const isExistInReadonlyMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === readonlyMap.get(target)\n            );\n        };\n\n        // shallowReadonly 原始值\n        const isExistInshallowReadonlyMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === shallowReadonlyMap.get(target)\n            );\n        };\n\n        // 是否是 reactive\n        if (key === ReactiveFlags.IS_REACTIVE) {\n            // 判断 reactive 类型\n            return !isReadonly;\n        } else if (key === ReactiveFlags.IS_READONLY) {\n            // 是否是 readonly\n            return isReadonly;\n        } else if (\n            isExistInReactiveMap() ||\n            isExistInReadonlyMap() ||\n            isExistInshallowReadonlyMap()\n        ) {\n            // 获取原始值\n            return target;\n        }\n        // 反射\n        const res = Reflect.get(target, key, receiver);\n\n        if (!isReadonly) {\n            // 注入追踪依赖\n            track(target, \"get\", key);\n        }\n\n        // shallowReadonly\n        if (shallow) {\n            return res;\n        }\n        if (isObject(res)) {\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        // 返回值\n        return res;\n    };\n}\n\nfunction createSetter() {\n    return function set(target, key, value, receiver) {\n        // console.log(\n        //     \"Proxy set 函数触发了. target:\",\n        //     JSON.stringify(target),\n        //     \" key: \",\n        //     key,\n        //     \" value: \",\n        //     value\n        // );\n        // 反射\n        const res = Reflect.set(target, key, value, receiver);\n        // 注入执行依赖\n        trigger(target, \"set\", key);\n        // 返回值\n        return res;\n    };\n}\n\nexport const mutableHandlers = {\n    get,\n    set,\n};\n\nexport const readonlyHandlers = {\n    get: readonlyGet,\n    set(target, key) {\n        console.warn(\n            `Set operation on key \"${String(key)}\" failed target is readonly.`\n        );\n        return true;\n    },\n};\n\nexport const shallowReadonlyHandlers = {\n    get: shallowReadonlyGet,\n    set(target, key) {\n        console.warn(\n            `Set operation on key \"${String(\n                key\n            )}\" failed: target is shallowReadonly.`,\n            target\n        );\n        return true;\n    },\n};\n","// Vue3.x 的 reactivity 就是基于 Proxy 来实现的\n// 通过监听 get 和 set\n// 在 get 中收集副作用函数\n// 在 set 中执行副作用函数\nimport { readBuilderProgram } from \"typescript\";\nimport {\n    mutableHandlers,\n    readonlyHandlers,\n    shallowReadonlyHandlers,\n} from \"./baseHandlers\";\n\nexport const reactiveMap = new WeakMap();\nexport const readonlyMap = new WeakMap();\nexport const shallowReadonlyMap = new WeakMap();\n\nexport const enum ReactiveFlags {\n    IS_REACTIVE = \"__v_isReactive\",\n    IS_READONLY = \"__v_isReadonly\",\n    RAW = \"__v_raw\",\n}\n\nexport function reactive(target) {\n    return createReactiveObject(target, reactiveMap, mutableHandlers);\n}\n\nexport function readonly(target) {\n    return createReactiveObject(target, readonlyMap, readonlyHandlers);\n}\n\nexport function shallowReadonly(target) {\n    return createReactiveObject(\n        target,\n        shallowReadonlyMap,\n        shallowReadonlyHandlers\n    );\n}\n\nexport function isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\n\nexport function isReadonly(value) {\n    return !!value[ReactiveFlags.IS_READONLY];\n}\n\nexport function isReactive(value) {\n    // value 是 proxy, 会触发 get 操作\n    // value 是 普通对象的话 会返回 undefined，转成布尔值\n    return !!value[ReactiveFlags.IS_REACTIVE];\n}\n\nexport function toRaw(value) {\n    // value 为 proxy 时，直接返回\n    // value 为普通对象，返回普通对象\n    // 只要不是 proxy，只要得到的 undefined，那么一定是普通对象\n    if (!value[ReactiveFlags.RAW]) {\n        return value;\n    }\n    return value[ReactiveFlags.RAW];\n}\n\nfunction createReactiveObject(target, proxyMap, baseHandlers) {\n    // 根据源数据获取对应的 proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        // 返回已存在的 proxy\n        return existingProxy;\n    }\n    // 根据源数据新建 proxy\n    const proxy = new Proxy(target, baseHandlers);\n    // 源数据 - proxy 存入容器中\n    proxyMap.set(target, proxy);\n    // 返回 proxy\n    return proxy;\n}\n\n// 1. 调用 reactive 并传入 {}\n// 2. 调用 createReactiveObject 并传入 target 和 proxyMap\n//      2.1 根据 target 在 proxyMap 中查找对应的 proxy\n//          - 查找到对应的 proxy 直接返回\n// - 未查找，生成一个 proxy\n","import { trackEffects, triggerEffects, isTracking } from \"./effect\";\nimport { createDep } from \"./dep\";\nimport { isObject, hasChanged } from \"../../shared\";\nimport { reactive } from \"./reactive\";\n\nexport class RefImpl {\n    private _rawValue: any;\n    private _value: any;\n    public dep;\n    public __v_isRef = true\n\n    constructor(value) {\n        // 原始值\n        this._rawValue = value;\n        // 如果 value 是一个对象，则需要用 reactive 来包裹\n        this._value = convert(value);\n        this.dep = createDep();\n    }\n\n    get value() {\n        // 收集依赖\n        trackRefValue(this);\n        return this._value;\n    }\n\n    set value(newValue) {\n        // 当新值不等于老值的话，那么才触发依赖\n        if (hasChanged(newValue, this._rawValue)) {\n            // 更新值\n            this._value = convert(newValue);\n            this._rawValue = newValue;\n            // 触发依赖\n            triggerRefValue(this);\n        }\n    }\n}\n\n// Ref 对外暴露的简便方法\nexport function ref(value) {\n    return createRef(value);\n}\n\n// 创建 Ref\nfunction createRef(value) {\n    const ref = new RefImpl(value);\n    return ref;\n}\n\nfunction convert(value) {\n    // 如果是对象则通过 reactive 创建\n    return isObject(value) ? reactive(value) : value;\n}\n\nexport function trackRefValue(ref) {\n    if (isTracking()) {\n        trackEffects(ref.dep);\n    }\n}\n\nexport function triggerRefValue(ref) {\n    triggerEffects(ref.dep);\n}\n\n\n// 解构 ref\nconst shallowUnwrapHandlers = {\n    get(target, key, receiver) {\n        const res = Reflect.get(target, key, receiver)\n        return unRef(res)\n    },\n    set(target, key, value, receiver) {\n        const oldValue = target[key]\n        if (isRef(oldValue) && !isRef(value)) {\n            return (target[key].value = value)\n        } else {\n            return Reflect.set(target, key, value, receiver)\n        }\n    }\n}\n\nexport function proxyRefs(objectWithRefs) {\n    return new Proxy(objectWithRefs, shallowUnwrapHandlers)\n}\n\n// 把 ref 里面的值拿到\nexport function unRef(ref) {\n    return isRef(ref) ? ref.value : ref\n}\n\nexport function isRef(value) {\n    return !!value.__v_isRef\n}\n","import { createDep } from \"./dep\";\nimport { ReactiveEffect } from \"./effect\";\nimport { trackRefValue, triggerRefValue } from \"./ref\";\n\nexport class ComputedRefImpl {\n    // 依赖收集容器\n    public dep: any\n    // 副作用函数\n    public effect: ReactiveEffect\n\n    // 缓存标识\n    private _dirty: boolean\n    private _value\n\n    constructor(getter) {\n        this._dirty = true\n        this._value = null\n        this.dep = createDep()\n        this.effect = new ReactiveEffect(getter, () => {\n            if (this._dirty) return\n\n            this._dirty = false\n            triggerRefValue(this)\n        })\n    }\n\n    get value() {\n        // 收集依赖\n        trackRefValue(this)\n        // 锁上，只可以调用一次\n        // 当数据改变的时候才会解锁\n        // 这里就是缓存实现的核心\n        // 解锁是在 scheduler 里面做的\n        if (this._dirty) {\n            this._dirty = false\n            // 执行 run\n            this._value = this.effect.run()\n        }\n        return this._value\n    }\n}\n\nexport function computed(getter) {\n    return new ComputedRefImpl(getter)\n}","import { initProps } from \"./componentProps\";\nimport { initSlots } from \"./componentSlots\";\nimport { emit } from \"./componentEmits\";\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstance\";\nimport { proxyRefs, shallowReadonly } from \"../reactivity/src\";\n\n/**\n * @description: 创建组件实例\n * @param {any} vnode\n * @return {*}\n */\nexport const createComponentInstance = function (vnode: any, parent) {\n    const instance = {\n        type: vnode.type,\n        vnode,\n        next: null, // 需要更新的 vnode, 用于更新 component 类型的组件\n        props: {},\n        proxy: null,\n        isMounted: false,\n        attrs: {}, // 属性\n        slots: {}, // 插槽\n        ctx: {}, // 上下文\n        setupState: {}, // setup 的返回值\n        parent,\n        provides: parent ? parent.provides : {},\n        emit: () => {},\n    };\n\n    // 在 prod 环境下的 ctx 只是下面简单的结构\n    // 在 dev 中更复杂\n    instance.ctx = {\n        _: instance,\n    };\n\n    // emit 的实现绑定\n    instance.emit = emit.bind(null, instance) as any;\n\n    return instance;\n};\n\nexport function setupComponent(instance) {\n    // 从实例上取出 props\n    const { props, children } = instance.vnode;\n    // 处理 props\n    initProps(instance, props);\n    // 处理 slots\n    initSlots(instance, children);\n\n    setupStatefulComponent(instance);\n}\n\nfunction setupStatefulComponent(instance) {\n    // 1. 创建 proxy\n    console.log(\"创建 proxy\");\n    // proxy 对象代理了 instance.ctx 对象\n    // 在使用的时候需要使用 instance.proxy 对象\n    // 因为在 prod 和 dev 下 instance.ctx 是不同的\n    instance.proxy = new Proxy(\n        instance.ctx,\n        PublicInstanceProxyHandlers as any\n    );\n    const { setup } = instance.type;\n    if (setup) {\n        // 2. 调用 setup() 参数: props、context\n        const context = createSetupContext(instance);\n        // 设置 currentInstance 的值\n        setCurrentInstance(instance);\n        // 真实场景里应该只有 dev 环境会把 props 设置为只读\n        const setupResult =\n            setup && setup(shallowReadonly(instance.props), context);\n        setCurrentInstance(null);\n        // 3. 处理 setupResult\n        handleSetupResult(instance, setupResult);\n    } else {\n        finishComponentSetup(instance);\n    }\n}\n\nfunction createSetupContext(instance) {\n    console.log(\"初始化 setup context\");\n    return {\n        attrs: instance.attrs,\n        slots: instance.slots,\n        emit: instance.emit,\n        expose: () => {},\n    };\n}\n\nfunction handleSetupResult(instance, setupResult) {\n    // 设置 render\n\n    if (typeof setupResult === \"function\") {\n        // 返回的渲染函数\n        // setup() {return () => h1('div')}\n        instance.render = setupResult;\n    } else if (typeof setupResult === \"object\") {\n        // 对象则先存到 setupState 上\n        instance.setupState = proxyRefs(setupResult);\n    }\n\n    finishComponentSetup(instance);\n}\n\nfunction finishComponentSetup(instance) {\n    // 给 instance 设置 render\n\n    // 先取到用户设置的 component options\n    const component = instance.type;\n\n    if (!instance.render) {\n        // 调用 compile 模板编译 template\n        if (compile && !component.render) {\n            if (component.template) {\n                const template = component.template;\n                component.render = compile(template);\n            }\n        }\n        instance.render = component.render;\n    }\n\n    // applyOptions()\n}\n\nfunction applyOptions() {\n    // 兼容 vue2.x\n}\n\nlet currentInstance = null;\nexport function getCurrentInstance() {\n    return currentInstance;\n}\n\nexport function setCurrentInstance(instance) {\n    currentInstance = instance;\n}\n\nlet compile;\nexport function registerRuntimeCompiler(_compile) {\n    compile = _compile;\n}\n","import { getCurrentInstance } from \"./component\";\n\nexport function provide(key, value) {\n    const instance: any  = getCurrentInstance();\n\n    if (instance) {\n        let { provides } = instance;\n\n        const parentProvides = instance.parent?.provides;\n\n        if (parentProvides === provides) {\n            provides = instance.provides = Object.create(parentProvides);\n        }\n\n        provides[key] = value;\n    }\n}\n\nexport function inject(key, defaultValue) {\n    const instance: any = getCurrentInstance();\n    if (instance) {\n        let provides = instance.parent?.provides;\n        if (key in provides) {\n            return provides[key];\n        } else if (defaultValue) {\n            if (typeof defaultValue === \"function\") {\n                return defaultValue();\n            }\n            return defaultValue;\n        }\n    }\n}\n","import { Fragment, createVNode } from \"../vnode\";\nimport { getCurrentInstance } from \"../component\";\n\nexport function renderSlot(slots, name: string, props = {}) {\n    const slot = slots[name];\n    console.log(\"渲染插槽 slot -> ${name}\");\n    if (slot) {\n        // 因为 slot 是一个返回 vnode 的函数，我们只需要把这个结果返回出去即可\n        // slot 就是一个函数，所以就可以把当前组件的一些数据给传出去，这个就是作用域插槽\n        // 参数就是 props\n        const slotContent = slot(props);\n        return createVNode(Fragment, {}, slotContent);\n    }\n}\n","const queue: any = new Set();\nconst p = Promise.resolve()\nlet isFlushPending = false;\n\nexport const queueJob = function (effect) {\n    // 容器中不包含副作用函数\n    if (!queue.has(effect)) {\n        // 推入容器中\n        queue.add(effect);\n        // 执行副作用函数\n        queueFlush();\n    }\n    console.log(`what's the effect: ${effect}`);\n};\n\nexport const nextTick = function(fn) {\n    return fn ? p.then(fn).finally(() => {\n            // 执行结束\n        isFlushPending = false\n    }) : p\n}\n\nfunction queueFlush() {\n    // 正在执行副作用函数中\n    if (isFlushPending) return;\n    // 开始执行\n    isFlushPending = true;\n\n    nextTick(flushJobs)\n}\n\nfunction flushJobs() {\n    console.log(\"副作用函数 微任务列表执行\");\n    // 执行容器中的所有副作用函数\n    queue.forEach((effect) => effect && effect());\n    // 清空所有副作用函数\n    queue.clear();\n}\n","export function shouldUpdateComponent(prevVNode, nextVNode) {\n    const { props: prevProps } = prevVNode;\n    const { props: nextProps } = nextVNode;\n\n    // props 无变化，不需要更新\n    if (prevProps === nextVNode) {\n        return false\n    }\n\n    // 旧 Props 无值，取决于 nextProps 是否有值\n    if (!prevProps) {\n        return !!nextProps\n    }\n\n    // 旧 Props 有值，nextProps 无值\n    if (!nextProps) {\n        return true\n    }\n\n    // 仔细检查，上述只是初略检查\n    return hasPropsChanged(prevProps, nextProps);\n}\n\nfunction hasPropsChanged(prevProps, nextProps): boolean {\n\n    // 数量不一致\n    const prevAllKeys = Object.keys(prevProps)\n    const nextAllKeys = Object.keys(nextProps)\n    if (prevAllKeys.length !== nextAllKeys.length) {\n        return true\n    }\n\n    // 数量一直再继续检查\n    for (let i = 0; i < nextAllKeys.length; i++) {\n        const key = nextAllKeys[i];\n        // 如果值不相等，或者 key 不在旧 props 中\n        if (nextProps[key] !== prevProps[key] || !(key in prevAllKeys)) {\n            return true\n        }\n        \n    }\n    return false\n}\n","import { ShapeFlags } from \"../shared\";\nimport { createComponentInstance } from \"./component\";\nimport { queueJob } from \"./scheduler\";\nimport { effect } from \"../reactivity/src\";\nimport { setupComponent } from \"./component\";\nimport { Text, Fragment, normalizeVNode } from \"./vnode\";\nimport { shouldUpdateComponent } from \"./componentRenderUtils\";\nimport { createAppAPI } from \"./createApp\";\n\nexport function createRenderer(options) {\n    const {\n        createElement: hostCreateElement,\n        setElementText: hostSetElementText,\n        patchProp: hostPatchProp,\n        insert: hostInsert,\n        remove: hostRemove,\n        setText: hostSetText,\n        createText: hostCreateText,\n    } = options;\n\n    const render = (vnode, container) => {\n        // console.log(\"调用 patch\");\n        const debug = window[\"debug\"];\n        debug && debug.mainPath(\"调用 patch\")();\n        patch(null, vnode, container);\n    };\n\n    /**\n     * @description: 更新\n     * @param {*} n1 旧节点\n     * @param {*} n2 新节点\n     * @param {*} container 容器\n     * @return {*}\n     */\n    function patch(\n        n1,\n        n2,\n        container = null,\n        anchor = null,\n        parentComponent = null\n    ) {\n        const { type, shapeFlag } = n2;\n        switch (type) {\n            case Text:\n                // 文字\n                processText(n1, n2, container);\n                break;\n            case \"comment\":\n                // 注释\n                break;\n            case \"static\":\n                break;\n            case Fragment:\n                processFragment(n1, n2, container);\n                break;\n            default:\n                // 其他类型基于 shapeFlag 处理，按位与\n                if (shapeFlag & ShapeFlags.ELEMENT) {\n                    console.log(\"处理 element\");\n                    processElement(n1, n2, container, anchor, parentComponent);\n                } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n                    console.log(\"处理 component\");\n                    processComponent(n1, n2, container, parentComponent);\n                }\n        }\n    }\n\n    function processFragment(n1, n2, container) {\n        if (!n1) {\n            console.log(\"初始化 Fragment 类型节点\");\n            mountChildren(n2.children, container);\n        }\n    }\n\n    // 文字处理\n    function processText(n1, n2, container) {\n        console.log(\"处理 Text 节点\");\n        if (n1 === null) {\n            // n1 是 null 说明是 init 的阶段\n            // 基于 createText 创建出 text 节点，然后使用 insert 添加到 el 内\n            console.log(\"初始化 Text 类型的节点\");\n            hostInsert(\n                (n2.el = hostCreateText(n2.children as string)),\n                container\n            );\n        } else {\n            // update\n            // 先对比一下 updated 之后的内容是否和之前的不一样\n            // 在不一样的时候才需要 update text\n            // 这里抽离出来的接口是 setText\n            // 注意，这里一定要记得把 n1.el 赋值给 n2.el, 不然后续是找不到值的\n            const el = (n2.el = n1.el!);\n            if (n2.children !== n1.children) {\n                console.log(\"更新 Text 类型的节点\");\n                hostSetText(el, n2.children as string);\n            }\n        }\n    }\n\n    // 处理标签\n    function processElement(n1, n2, container, anchor, parentComponent) {\n        // 旧节点不存在, 直接挂载\n        if (!n1) {\n            mountElement(n2, container, anchor);\n            // hostCreateElement(n2.type)\n        } else {\n            updateElement(n1, n2, container, anchor, parentComponent);\n        }\n    }\n\n    // 更新标签\n    function updateElement(n1, n2, container, anchor, parentComponent) {\n        const oldProps = (n1 && n1.props) || {};\n        const newProps = n2.props || {};\n\n        console.log(\"更新 element\");\n        console.log(\"旧节点：\", n1);\n        console.log(\"新节点：\", n2);\n\n        const el = (n2.el = n1.el);\n        // 对比 props\n        patchProps(el, oldProps, newProps);\n        // 对比 children\n        patchChildren(n1, n2, el, anchor, parentComponent);\n    }\n\n    function patchProps(el, oldProps = {}, newProps = {}) {\n        // 新旧有值，更新值\n        for (const key in newProps) {\n            const oldValue = oldProps[key];\n            const newValue = newProps[key];\n            if (oldValue !== newValue) {\n                // 更新\n                hostPatchProp(el, key, oldValue, newValue);\n            }\n        }\n\n        // 旧有，新无\n        for (const key in oldProps) {\n            const oldValue = oldProps[key];\n            // 新的节点 props 中没有该属性\n            if (!(key in newProps)) {\n                // 更新\n                hostPatchProp(el, key, oldValue, null);\n            }\n        }\n    }\n\n    function patchChildren(n1, n2, container, anchor, parentComponent) {\n        // 如果 c2 的 children 是 text 类型的话\n        // 对比 n1 的 children ，不一样直接更新即可\n        if (n2.shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            if (n1.children !== n2.children) {\n                console.log(\"类型为 text_children, 当前需要更新\");\n                hostSetElementText(container, n2.children as string);\n            }\n        } else {\n            // 旧节点的子节点是 Array\n            if (n1.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                // 新节点的子节点是 Array\n                if (n2.shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n                    patchKeyedChildren(\n                        n1.children,\n                        n2.children,\n                        container,\n                        anchor,\n                        parentComponent\n                    );\n                }\n            }\n        }\n    }\n\n    function patchKeyedChildren(\n        c1: any[],\n        c2: any[],\n        container,\n        parentAnchor,\n        parentComponent\n    ) {\n        // 粗暴更新 直接移除旧节点的 DOM，再更新新节点的 DOM\n        // c1.forEach(c => hostRemove(c.el))\n        // c2.forEach(c => patch(null, c, container))\n\n        // 快速算法\n        let i = 0;\n        const l2 = c2.length;\n        var e1 = c1.length - 1,\n            e2 = l2 - 1;\n        // 检查新旧节点的 type 和 key 是否相同\n        var isSameVNodeType = function (n1, n2) {\n            // if (n1 === undefined || n2 === undefined) return false\n            return n1.type === n2.type && n1.key === n2.key;\n        };\n        // 新旧节点从头开始遍历\n        while (i <= e1 && i <= e2) {\n            const prevChild = c1[i];\n            const nextChild = c2[i];\n            if (!isSameVNodeType(prevChild, nextChild)) {\n                // 不同跳出 while 循环\n                console.log(\"头部遍历 - 新旧节点不同\");\n                break;\n            }\n            // 节点一样，则更新数据\n            patch(\n                prevChild,\n                nextChild,\n                container,\n                parentAnchor,\n                parentComponent\n            );\n            i++;\n        }\n        // 新旧节点从尾部开始遍历\n        while (i <= e1 && i <= e2) {\n            const prevChild = c1[e1];\n            const nextChild = c2[e2];\n            if (!isSameVNodeType(prevChild, nextChild)) {\n                // 不同跳出 while 循环\n                console.log(\"尾部遍历 - 新旧节点不同\");\n                break;\n            }\n            // 节点一样，则更新数据\n            patch(\n                prevChild,\n                nextChild,\n                container,\n                parentAnchor,\n                parentComponent\n            );\n            e1--;\n            e2--;\n        }\n\n        // 从头与从尾部遍历结束\n        // 条件成立则说明新数据中有新增节点\n        //               新      旧\n        //               p-1     p-1  <- oldEnd = 0\n        //      j = 1 -> p-4     p-2  <- j = 1\n        // newEnd = 2 -> p-5     p-3\n        //               p-2\n        //               p-3\n        //\n        if (i > e1 && i <= e2) {\n            // 锚点的计算：新的节点有可能需要添加到尾部，也可能添加到头部，所以需要指定添加的问题\n            // 要添加的位置是当前的位置+1\n            // 因为对于往左侧添加的话，应该获取到 c2 的第一个元素（因为它是被 mount 过的）\n            // 所以我们需要从 e2 + 1 取到锚点的位置\n            const nextPos = e2 + 1;\n            const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n            while (i >= e2) {\n                console.log(\"新增一个节点：\", c2[i].key);\n                patch(null, c2[i++], container, anchor, parentComponent);\n            }\n        } else if (i > e2 && i <= e1) {\n            //               新      旧\n            // newEnd = 0 -> p-1     p-1\n            //      j = 1 -> p-2     p-4 <- j = 1\n            //               p-3     p-5 <- oldEnd = 2\n            //                       p-2\n            //                       p-3\n            //\n            while (i <= e1) {\n                console.log(\"移除一个节点: \", c1[i].key);\n                hostRemove(c1[i++].el);\n            }\n        } else {\n            // 前后都对比完了、中间节点是乱序的对比情况\n            // 新 p1 p3 p2 p4 p6 p7\n            // 旧 p1 p2 p3 p4 p5 p7\n            let s1 = i,\n                s2 = i;\n            // 节点 map : {VNode1.key: 1, VNode2.key: 2}\n            const keyToNewIndexMap = new Map();\n            let moved = false;\n            let maxNewIndexSoFar = 0;\n            // 先把 key 和 newIndex 绑定，方便后续基于 key 找到 newIndex\n            // 遍历新节点\n            for (let i = s2; i <= e2; i++) {\n                const nextChild = c2[i];\n                keyToNewIndexMap.set(nextChild.key, i);\n            }\n            // 需要处理新节点的数量\n            const toBePatched = e2 - s2 + 1;\n            let patched = 0;\n            // 用来记录新节点对应旧节点的下标值\n            const newIndexArray = new Array(toBePatched);\n            // 初始化为0，后面处理的时候 如果发现是0，那么久说明信值再老的里面不存在\n            for (let index = 0; index < toBePatched; index++) {\n                // 每个新节点初始 -1\n                newIndexArray[index] = 0;\n            }\n\n            // 遍历老节点\n            // 1. 老节点有，新节点没有则删除\n            // 2. 新节点有，老节点没有则新增\n            for (i = s1; i <= e1; i++) {\n                const prevChild = c1[i];\n\n                // 如果老的节点大于新节点的数量，那么这里在处理老节点的时候就直接删除即可\n                if (patched >= toBePatched) {\n                    hostRemove(prevChild.el);\n                    continue;\n                }\n\n                let newIdx;\n                if (prevChild.key !== null) {\n                    // 通过 key 快速查找，时间复杂度O(1)\n                    newIdx = keyToNewIndexMap.get(prevChild.key);\n                } else {\n                    // 如果没有 key 的话，那么只能遍历所有新节点来确定当前节点是否存在\n                    // 时间复杂度O(n)\n                    for (let j = s2; j <= e2; j++) {\n                        if (isSameVNodeType(prevChild, c2[j])) {\n                            newIdx = j;\n                            break;\n                        }\n                    }\n                }\n\n                // newIdx 的值可能为0 （0 也是正常值）\n                // 需要判断是否是 undefined 或者 null\n                if (newIdx === undefined) {\n                    // 节点不存在\n                    hostRemove(prevChild.el);\n                } else {\n                    // 新老节点都存在\n                    console.log(\"新老节点都存在\");\n                    // 新老节点的索引建立映射关系\n                    // i + 1 是因为 i 可能是 0. (0的话会被认为新节点在老的节点中不存在)\n                    newIndexArray[newIdx - s2] = i + 1;\n                    // 确定中间的节点是否需要移动\n                    // 新的 newIdx 如果一直是升序的话，那么说明没有移动\n                    // 所以可以记录最后一个节点在新的里面的索引，然后看看是不是升序\n                    // 不是升序的话，就可以确定节点移动过了\n                    if (newIdx >= maxNewIndexSoFar) {\n                        maxNewIndexSoFar = newIdx;\n                    } else {\n                        moved = true;\n                    }\n                    patch(\n                        prevChild,\n                        c2[newIdx],\n                        container,\n                        null,\n                        parentComponent\n                    );\n                    patched++;\n                }\n            }\n\n            // 利用最长递增子序列来优化移动逻辑\n            // 因为元素是升序的话，那么这些元素就是不需要移动的\n            // 而我们就可以通过最长递增子序列来获取到升序的列表\n            // 在移动的时候我们去对比这个列表，如果对比上的话，就说明当前元素不需要移动\n            // 通过 moved 来进行优化，如果没有移动过的话 那么就不需要执行算法\n            // getSequence 返回的是 newIndexArray 的索引值\n            // 所以后面我们可以直接遍历索引值来处理，也就是直接使用 toBePatched 即可\n            const increasingNewIndexSequence = moved\n                ? getSequence(newIndexArray)\n                : [];\n            let j = increasingNewIndexSequence.length - 1;\n\n            // 遍历新节点\n            // 1. 需要找出老节点没有，而新节点有的 -> 需要把这个节点创建\n            // 2. 最后需要移动一下位置，比如 [c,d,e] -> [e,c,d]\n\n            // 这里倒循环是因为在 insert 的时候，需要保证锚点是处理完的节点（也就是已经确定位置了）\n            // 因为 insert 逻辑是使用的 insertBefore()\n            for (let i = toBePatched - 1; i >= 0; i--) {\n                // 确定当前要处理的节点索引\n                const nextIndex = s2 + i;\n                const nextChild = c2[nextIndex];\n                // 锚点等于当前节点索引+1\n                // 也就是当前节点的后面一个节点(又因为是倒遍历，所以锚点是位置确定的节点)\n                const anchor =\n                    nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n\n                if (newIndexArray[i] === 0) {\n                    // 说明新节点在老的里面不存在\n                    // 需要创建\n                    patch(null, nextChild, container, anchor, parentComponent);\n                } else if (moved) {\n                    // 需要移动\n                    // 1. j 已经没有了 说明剩下的都需要移动了\n                    // 2. 最长子序列里面的值和当前的值匹配不上， 说明当前元素需要移动\n                    if (j < 0 || increasingNewIndexSequence[j] !== i) {\n                        // 移动的话使用 insert 即可\n                        hostInsert(nextChild.el, container, anchor);\n                    } else {\n                        // 这里就是命中了  index 和 最长递增子序列的值\n                        // 所以可以移动指针了\n                        j--;\n                    }\n                }\n            }\n        }\n    }\n\n    // 挂载标签\n    function mountElement(vnode, container, anchor) {\n        const { shapeFlag, props } = vnode;\n        // 根据 type 创建元素\n        const el = (vnode.el = hostCreateElement(vnode.type));\n        // 单子组件\n        if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n            console.log(`处理文本:${vnode.children}`);\n            hostSetElementText(el, vnode.children);\n        } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n            // 多子组件\n            mountChildren(vnode.children, el);\n        }\n\n        // 处理属性\n        if (props) {\n            for (const key in props) {\n                const nextVal = props[key];\n                hostPatchProp(el, key, null, nextVal);\n            }\n        }\n\n        // beforeMount 钩子\n        console.log(\"vnodeHook -> onVnodeBeforeMount\");\n        console.log(\"DirectiveHook -> beforeMount\");\n        console.log(\"transition -> beforeEnter\");\n\n        // 将创建的 el 插入到 容器中\n        hostInsert(el, container, anchor);\n\n        // mount 钩子\n        console.log(\"vnodeHook -> onVnodeMount\");\n        console.log(\"DirectiveHook -> mount\");\n        console.log(\"transition -> enter\");\n    }\n\n    // 挂载子节点\n    function mountChildren(children, container) {\n        children.forEach((c) => {\n            console.log(\"mountChildren:\", c);\n            patch(null, c, container);\n        });\n    }\n\n    // 处理组件\n    function processComponent(n1, n2, container, parentComponent) {\n        if (!n1) {\n            // 挂载组件\n            mountComponent(n2, container, parentComponent);\n        } else {\n            // 更新组件\n            updateComponent(n1, n2, container);\n        }\n    }\n\n    // 更新组件\n    function updateComponent(n1, n2, container) {\n        console.log(\"更新组件\");\n        const instance = (n2.component = n1.component);\n        // 是否有更新 props\n        if (shouldUpdateComponent(n1, n2)) {\n            console.log(\"组件需要更新\");\n            instance.next = n2;\n            // 更新组件\n            // update 是在 setupRenderEffect 中初始化的\n            // update 函数除了当内部的响应式对象发生改变时会调用\n            // 还可以主动的调用（effect 特性）\n            // 调用 update 更新调用 patch 逻辑\n            // 在 update 中调用 next 变成了 n2\n            // TODO 在 update 中处理 next 逻辑\n            instance.update();\n        } else {\n            n2.component = n1.component;\n            n2.el = n1.el;\n            instance.vnode = n2;\n        }\n    }\n\n    // 挂载组件\n    function mountComponent(vnode, container, parentComponent) {\n        // 创建组件实例\n        const instance = (vnode.component = createComponentInstance(\n            vnode,\n            parentComponent\n        ));\n        console.log(`创建组件实例:${instance.type.name}`);\n        // 加工组件实例\n        setupComponent(instance);\n\n        setupRenderEffect(instance, vnode, container);\n    }\n\n    function setupRenderEffect(instance, vnode, container) {\n        // 调用 render\n        // 应该传入 ctx 也就是 proxy\n        // ctx 可以选择暴露给用户的 api\n        // 源代码里面是调用的 renderComponentRoot 函数\n        // 这里为了简化直接调用 render\n\n        function componentUpdateFn() {\n            if (!instance.isMounted) {\n                console.log(\"调用 render,获取 subTree\");\n                const proxyToUse = instance.proxy;\n                const subTree = (instance.subTree = normalizeVNode(\n                    instance.render.call(proxyToUse, proxyToUse)\n                ));\n                console.log(\"subTree\", subTree);\n\n                console.log(`${instance.type.name}:触发 beforeMount hook`);\n                console.log(\n                    `${instance.type.name}:触发 onVnodeBeforeMount hook`\n                );\n\n                // 这里基于 subTree 再次调用 patch\n                // 基于 render 返回的 vnode ，再次进行渲染\n                // 这里我把这个行为隐喻成开箱\n                // 一个组件就是一个箱子\n                // 里面有可能是 element （也就是可以直接渲染的）\n                // 也有可能还是 component\n                // 这里就是递归的开箱\n                // 而 subTree 就是当前的这个箱子（组件）装的东西\n                // 箱子（组件）只是个概念，它实际是不需要渲染的\n                // 要渲染的是箱子里面的 subTree\n                patch(null, subTree, container, null, instance);\n                // 把 root element 赋值给 组件的vnode.el ，为后续调用 $el 的时候获取值\n                vnode.el = subTree.el;\n\n                console.log(`${instance.type.name}:触发 mounted hook`);\n                instance.isMounted = true;\n            } else {\n                console.log(\"更新逻辑: \", Date.now());\n                const { next, vnode } = instance;\n\n                // next 存在，说明需要更新组件的 props、slots 等\n                if (next) {\n                    next.el = vnode.el;\n                    updateComponentPreRender(instance, next);\n                }\n                // 获取新的 subTree\n                const proxyToUse = instance.proxy;\n                const nextTree = normalizeVNode(\n                    instance.render.call(proxyToUse, proxyToUse)\n                );\n                // 替换之前的 subTree\n                const prevTree = instance.subTree;\n                instance.subTree = nextTree;\n\n                // 触发 beforeUpdated hook\n                console.log(\"beforeUpdated hook\");\n                console.log(\"onVnodeBeforeUpdate hook\");\n\n                // 用旧的 vnode 和新的 vnode 交给 patch 来处理\n                patch(prevTree, nextTree, prevTree.el, null, instance);\n\n                // 触发 updated hook\n                console.log(\"updated hook\");\n                console.log(\"onVnodeUpdated hook\");\n                console.log(Date.now());\n            }\n        }\n\n        instance.update = effect(componentUpdateFn, {\n            scheduler: () => {\n                // const that = this.scheduler\n                queueJob(instance.update);\n            },\n        });\n    }\n\n    function updateComponentPreRender(instance, nextVNode) {\n        // 更新 nextVNode 的组件实例\n        // instance.vnode 是组件实例更新前的\n        // props 就是基于 instance.vnode.props 获取\n        // 更新 vnode\n        nextVNode.component = instance;\n        // const prevProps = instance.vnode.props\n        instance.vnode = nextVNode;\n        instance.next = null;\n\n        const { props } = nextVNode;\n        console.log(\"更新组件的 props\", props);\n        instance.props = props;\n        console.log(\"更新组件的 slots\");\n        // TODO\n    }\n\n    return {\n        createApp: createAppAPI(render),\n    };\n}\n\nfunction getSequence(arr: number[]): number[] {\n    const p = arr.slice();\n    const result = [0];\n    let i, j, u, v, c;\n    const len = arr.length;\n    for (i = 0; i < len; i++) {\n        const arrI = arr[i];\n        if (arrI !== 0) {\n            j = result[result.length - 1];\n            if (arr[j] < arrI) {\n                p[i] = j;\n                result.push(i);\n                continue;\n            }\n            u = 0;\n            v = result.length - 1;\n            while (u < v) {\n                c = (u + v) >> 1;\n                if (arr[result[c]] < arrI) {\n                    u = c + 1;\n                } else {\n                    v = c;\n                }\n            }\n            if (arrI < arr[result[u]]) {\n                if (u > 0) {\n                    p[i] = result[u - 1];\n                }\n                result[u] = i;\n            }\n        }\n    }\n    u = result.length;\n    v = result[u - 1];\n    while (u-- > 0) {\n        result[u] = v;\n        v = p[v];\n    }\n    return result;\n}\n","import { isOn } from \"../shared\";\nimport { createRenderer } from \"../runtime-core\";\n\nfunction createElement(type: any) {\n    console.log(\"CreateElement\", type);\n    const dom = document.createElement(type);\n    return dom;\n}\n\nfunction createText(text) {\n    return document.createTextNode(text)\n}\n\nfunction setText(node, text) {\n    node.nodeValue = text\n}\n\n function setElementText(el: HTMLElement, text) {\n    console.log(\"SetElementText\", el, text);\n    el.textContent = text;\n}\n\n function patchProp(el, key, preValue, nextValue) {\n    console.log(`属性key: ${key} 的旧值是${preValue}，新值是:${nextValue}`);\n\n    if (isOn(key)) {\n        // 添加事件处理函数的时候需要注意一下\n        // 添加的和删除的必须是一个函数，不然的话 删除不掉\n        // 那么就需要把之前 add 的函数给存起来，后面删除的时候需要用到\n        // 存储所有的事件函数\n        const invokers = el._vei || (el._vei = {});\n        const existingInvoker = invokers[key];\n        if (nextValue && existingInvoker) {\n            // patch\n            // 修改函数值\n            existingInvoker.value = nextValue\n        } else {\n            const eventName = key.slice(2).toLowerCase()\n            if (nextValue) {\n                const invoker = (invokers[key] = nextValue)\n                el.addEventListener(eventName, invoker)\n            } else {\n                el.removeEventListener(eventName, existingInvoker)\n                invokers[key] = undefined\n            }\n        }\n    } else {\n        if (nextValue === null || nextValue === '') {\n            el.removeattribute(key)\n        } else {\n            el.setAttribute(key, nextValue)\n        }\n    }\n}\n\n function insert(child, parent, anchor = null) {\n    console.log(`Insert`);\n    parent.insertBefore(child, anchor)\n}\n\n function remove(child) {\n    const parent = child.parentNode;\n    if (parent) parent.removeChild(child);\n}\n\nlet renderer;\n\nfunction ensureRenderer() {\n    // 如果 renderer 有值的话，那么以后都不会初始化了\n    return renderer || (renderer = createRenderer({\n        createElement,\n        createText,\n        setText,\n        setElementText,\n        patchProp,\n        insert,\n        remove\n    }))\n}\n\nexport const createApp = (...args) => {\n    return ensureRenderer().createApp(...args)\n}\n\nexport * from '../runtime-core'","export const TO_DISPLAY_STRING = Symbol(\"toDisplayString\");\nexport const helperNameMap = {\n    [TO_DISPLAY_STRING]: \"toDisplayString\"\n}","import { NodeTypes } from \"./ast\";\nimport { helperNameMap, TO_DISPLAY_STRING } from \"./runtimeHelpers\";\n\nexport function generate(ast, options = {}) {\n    // 生成 context\n    const context = createCodegenContext(ast, options);\n    const { push, mode } = context;\n\n    // 生成 preambleContext\n    if (mode === \"module\") {\n        genModulePreamble(ast, context);\n    } else {\n        genFunctionPreamble(ast, context);\n    }\n\n    const functionName = \"render\";\n\n    const args = [\"_ctx\"];\n\n    const signature = args.join(\", \");\n    push(`function ${functionName}(${signature}) {`);\n    // 生成具体的代码内容\n    // 生成 vnode tree 的表达式\n    push(\"return \");\n    genNode(ast.codegenNode, context);\n\n    push(\"}\");\n\n    return {\n        code: context.code,\n    };\n}\n\nfunction genFunctionPreamble(ast: any, context: any) {\n    const { runtimeGlobalName, push, newline } = context;\n    const VueBinging = runtimeGlobalName;\n\n    const aliasHelper = (s) => `${helperNameMap[s]} : _${helperNameMap[s]}`;\n\n    if (ast.helpers.length > 0) {\n        push(\n            `\n        const { ${ast.helpers.map(aliasHelper).join(\", \")}} = ${VueBinging} \n\n      `\n        );\n    }\n\n    newline();\n    push(`return `);\n}\n\nfunction genNode(node: any, context: any) {\n    switch (node.type) {\n        case NodeTypes.INTERPOLATION:\n            genInterpolation(node, context);\n            break;\n        case NodeTypes.SIMPLE_EXPRESSION:\n            genExpression(node, context);\n            break;\n        default:\n            break;\n    }\n}\n\nfunction genExpression(node: any, context: any) {\n    context.push(node.content, node);\n}\n\nfunction genInterpolation(node: any, context: any) {\n    const { push, helper } = context;\n    push(`${helper(TO_DISPLAY_STRING)}(`);\n    genNode(node.content, context);\n    push(\")\");\n}\n\nfunction genModulePreamble(ast, context) {\n    // preamble 就是 import 语句\n    const { push, newline, runtimeModuleName } = context;\n\n    if (ast.helpers.length) {\n        // ast.helpers 里面有个 [toDisplayString]\n        // 生成之后就是 import { toDisplayString as _toDisplayString } from 'vue'\n        const res = ast.helpers\n            .map((s) => {\n                return `${helperNameMap[s]} as _${helperNameMap[s]}`;\n            })\n            .join(\", \");\n        const code = `import {${res}} from ${JSON.stringify(\n            runtimeModuleName\n        )}`;\n\n        push(code);\n    }\n\n    newline();\n}\n\nfunction createCodegenContext(\n    ast,\n    { runtimeModuleName = \"vue\", runtimeGlobalName = \"Vue\", mode = \"function\" }\n) {\n    const context = {\n        code: \"\",\n        mode,\n        runtimeModuleName,\n        runtimeGlobalName,\n        helper(key) {\n            return `_${helperNameMap[key]}`;\n        },\n        push(code) {\n            context.code += code;\n        },\n        newline() {\n            // 换行\n            // 缩进\n            context.code += \"\\n\" + \"    \";\n        },\n    };\n\n    return context;\n}\n","import { NodeTypes, ElementTypes } from \"./ast\";\n\nconst enum TagType {\n    Start,\n    End,\n}\n\nexport function baseParse(content: string) {\n    const context = createParserContext(content);\n    return createRoot(parseChildren(context));\n}\n\nfunction createParserContext(content) {\n    console.log(\"创建 paserContext\");\n    return {\n        source: content,\n    };\n}\n\nfunction parseChildren(context) {\n    console.log(\"开始解析 children\");\n    const nodes: any[] = [];\n\n    while (!isEnd(context)) {\n        let node;\n        if (context.source.startsWith(\"{{\")) {\n            // {{ 开头\n            node = parseMustache(context);\n        } else if (context.source.startsWith(\"<\")) {\n            // 标签开头\n            if (/[a-z]/i.test(context.source[1])) {\n                // 字母开头\n                node = parseElement(context, TagType.Start);\n            } else if (context.source[1] === \"/\") {\n                // 结束标签\n                if (/[a-z]/i.test(context.source[2])) {\n                    parseTag(context, TagType.End);\n\n                    continue;\n                }\n            }\n        }\n\n        if (!node) {\n            node = parseText(context);\n        }\n        nodes.push(node);\n    }\n\n    return nodes;\n}\n\n// 解析文本\nfunction parseText(context): any {\n    console.log(\"解析 text\", context);\n    let endIndex = context.source.length;\n\n    const endTokens = [\"<\", \"{{\"];\n    for (let i = 0; i < endTokens.length; i++) {\n        const index = context.source.indexOf(endTokens[i])\n        if (index !== -1) {\n            endIndex = index\n        }\n    }    \n\n    const content = parseTextData(context, endIndex);\n\n    return {\n        type: NodeTypes.TEXT,\n        content,\n    };\n}\n\nfunction parseTextData(context: any, length: number): any {\n    console.log(\"解析 textData\");\n    //\n    const rawText = context.source.slice(0, length);\n    // 移动光标\n    advanceBy(context, length);\n\n    return rawText;\n}\n\n// 解析花括号语法\nfunction parseMustache(context) {\n    console.log(\"解析 mustache\", context);\n    let content = context.source;\n\n    // 查找结束标识\n    const startIndex = context.source.indexOf(\"{{\");\n    const endIndex = context.source.indexOf(\"}}\");\n\n    // 没有 {{ 或者 }}\n    if (startIndex == -1 || endIndex == -1) {\n        console.warn(`${context.source} is not a valid interpolation`);\n    } else {\n        // 移除 {{\n        advanceBy(context, 2);\n        content = parseSimpleExpress(\n            startIndex,\n            endIndex - 2,\n            context\n        );\n        // 移除 }}\n        advanceBy(context, 2);\n    }\n    return {\n        type: NodeTypes.INTERPOLATION,\n        content,\n    };\n}\n\nfunction parseSimpleExpress(startIndex, endIndex, context) {\n    console.log(\"解析 simple express\");\n\n    const rawText = context.source.slice(startIndex, endIndex);\n\n    // 移除 值\n    advanceBy(context, endIndex);\n\n    return {\n        type: NodeTypes.SIMPLE_EXPRESSION,\n        content: rawText.trim(),\n    };\n}\n\nfunction parseElement(context, tagType) {\n    const element = parseTag(context, tagType);\n\n    const children = parseChildren(context);\n\n    // 解析尾部标签</div>\n    if (element && startsWithEndTagOpen(context, element.tag)) {\n        parseTag(context, TagType.End);\n    } else {\n    }\n\n    if (element) {\n        element[\"children\"] = children;\n    }\n    return element;\n}\n\nfunction parseTag(context, tagType) {\n    // 以 < 开头，后面可能存在 /, 再后面是标签，标签后 制表符等 /> 存在0至多个\n    const match = /^<\\/?([a-z][^\\r\\n\\t\\f />]*)/i.exec(context.source);\n\n    let tag = \"\";\n    if (match) {\n        tag = match[1];\n        // 移除开始标签\n        // <div></div>\n        advanceBy(context, match[0].length); // ></div>\n\n        // 暂不考虑 自闭合\n        advanceBy(context, 1); //</div>\n    }\n\n    if (tagType === TagType.End) return;\n\n    return {\n        type: NodeTypes.ELEMENT,\n        tag: tag,\n        tagType: ElementTypes.ELEMENT,\n    };\n}\n\nfunction startsWithEndTagOpen(context, tag) {\n    // 以 </ 开头，并且 取开始标签值对应的长度，转成小写后，对比是否相同\n    return (\n        context.source.startsWith(\"</\") &&\n        context.source.slice(2, tag.length).toLowerCase() === tag.toLowerCase()\n    );\n}\n\nfunction advanceBy(context, numberOfCharacters) {\n    console.log(\"移动光标\", context, numberOfCharacters);\n    context.source = context.source.slice(numberOfCharacters);\n}\n\nfunction isEnd(context) {\n    return !context.source;\n}\n\nfunction createRoot(children) {\n    return {\n        type: NodeTypes.ROOT,\n        children,\n        helpers: [],\n    };\n}\n","import { NodeTypes } from \"./ast\";\nimport { TO_DISPLAY_STRING } from \"./runtimeHelpers\";\n\nexport function transform(root, options = {}) {\n    // 创建 context\n    const context = createTransformContext(root, options);\n\n    // 遍历 node\n    traverseNode(root, context);\n\n    craeteRootCodegen(root, context)\n\n    root.helpers.push(...context.helpers.keys());\n}\n\nfunction traverseNode(node, context) {\n    const type: NodeTypes = node.type;\n\n    // 节点转换 方法\n    const nodeTransforms = context.nodeTransforms;\n    nodeTransforms.forEach((fn) => {\n        fn(node, context);\n    });\n\n    switch (node.type) {\n        case NodeTypes.INTERPOLATION:\n            // 插值的点，在于后续生成 render 代码的时候获取变量的值\n            context.helper(TO_DISPLAY_STRING);\n            break;\n        case NodeTypes.ROOT:\n        case NodeTypes.ELEMENT:\n            traverseChildren(node, context);\n            break;\n\n        default:\n            break;\n    }\n}\n\nfunction traverseChildren(node, context) {\n    node.children &&\n        node.children.forEach((childNode) => {\n            // TODO: 需要设置 context 的值\n            traverseNode(childNode, context);\n        });\n}\n\nfunction createTransformContext(root, options) {\n    const context = {\n        root,\n        nodeTransforms: options.nodeTransforms || [],\n        helpers: new Map(),\n        helper(name) {\n            // 收集调用的次数\n            // TODO 但是为什么收集次数呢\n            // helpers 数据会在后续生成代码的时候用到\n            const count = context.helpers.get(name) || 0;\n            context.helpers.set(name, count + 1);\n        },\n    };\n    return context;\n}\n\nfunction craeteRootCodegen(root, context) {\n    const { children } = root;\n    const child = children[0];\n\n    root.codegenNode = child;\n}\n","import { NodeTypes } from \"../ast\";\n\nexport function transformExpression(node) {\n    if (node.type === NodeTypes.INTERPOLATION) {\n        node.content = processExpression(node.content);\n    }\n}\n\nfunction processExpression(node) {\n    node.content = `_ctx.${node.content}`;\n\n    return node;\n}\n","import { generate } from \"./codegen\";\nimport { baseParse } from \"./parse\";\nimport { transform } from \"./transform\";\nimport { transformExpression } from \"./transforms/transformExpression\";\n\nexport function baseCompile(template, options) {\n  // 1. 先把 template 也就是字符串 parse 成 ast\n  const ast = baseParse(template);\n  // 2. 给 ast 加点料（- -#）\n  transform(\n    ast,\n    Object.assign(options, {\n      nodeTransforms: [transformExpression],\n    })\n  );\n\n  // 3. 生成 render 函数代码\n  return generate(ast);\n}\n","import \"./tiny-core\";\nimport * as runtimeDom from \"./runtime-dom\";\nimport { registerRuntimeCompiler } from \"./runtime-dom\";\n\nimport { baseCompile } from \"./compiler-core/src\";\nexport * from \"./reactivity/src\";\nexport * from \"./runtime-dom\";\n\nfunction compileToFunction(template, options = {}) {\n    const { code } = baseCompile(template, options);\n\n    // 调用 compile 得到的代码在给封装到函数内,\n    // 这里会依赖 runtimeDom 的一些函数，所以在这里通过参数的形式注入进去\n    const func = new Function(\"Vue\", code);\n\n    // function func(Vue) {\n    //     const { toDisplayString: _toDisplayString } = Vue;\n    \n    //     return function render(_ctx) {\n    //         return _toDisplayString(_ctx.msg);\n    //     };\n    // }\n\n    const render = func(runtimeDom);\n\n    return render;\n}\n\nregisterRuntimeCompiler(compileToFunction);\n\n\n"],"names":[],"mappings":"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"}