{"version":3,"file":"tiny-vue.cjs.js","sources":["../src/reactivity/src/dep.ts","../src/shared/index.ts","../src/reactivity/src/effect.ts","../src/reactivity/src/baseHandlers.ts","../src/reactivity/src/reactive.ts","../src/reactivity/src/ref.ts","../src/reactivity/src/computed.ts"],"sourcesContent":["// 存储所有的 effect 对象\nexport function createDep(effects?) {\n    const dep = new Set(effects)\n    return dep\n}","export * from \"./shapeFlags\";\n\n// 是否为对象\nexport const isObject = (val) => {\n    return val !== null && typeof val === 'object'\n}\n\n// 对象复制\nexport const extend = Object.assign\nexport function hasChanged(value, oldValue) {\n    return !Object.is(value, oldValue)\n}\n\nconst camelizeRE = /-(\\w)/g;\n\n/**\n * @description: 连接符命名转驼峰命名\n * @param {string} str\n * @return {*}\n */\nexport const camelize = (str: string): string => {\n    return str.replace(camelizeRE, (_, $1) => ($1 ? $1.toUpperCase() : \"\"));\n};\n\n/**\n * @private\n * @description: 首字母大写\n * @param {string} str\n */\nexport const capitalize = (str: string) =>\n    str.charAt(0).toUpperCase() + str.slice(1);\n\n/**\n * @private\n * @description: 添加 on 前缀\n * @param {string} str\n * @return {*}\n */\nexport const toHandlerKey = (str: string) =>\n    str ? `on${capitalize(str)}` : ``;\n","import { createDep } from \"./dep\";\nimport { extend } from \"../../shared/index\";\n\n// 当前的 effect\nlet activeEffect = void 0;\n// 存储 Map\nconst targetMap = new WeakMap();\n\n// 依赖收集\nexport class ReactiveEffect {\n    active = true;\n    deps = [];\n    constructor(public fn, public scheduler?) {\n        console.log(`创建 ReactiveEffect 对象`);\n    }\n\n    run() {\n        // 执行副作用函数\n        // 给全局的 activeEffect 赋值\n        activeEffect = this as any;\n\n        console.log(\"执行 副作用函数 fn\");\n        return this.fn();\n    }\n\n    stop() {\n        if (this.active) {\n            // 如果第一次执行 stop 后 active 就 false\n            // 防止重复调用\n            cleanupEffect(this);\n            this.active = false;\n        }\n    }\n}\n\nexport function effect(fn, options = {}) {\n    const _effect = new ReactiveEffect(fn);\n    extend(_effect, options);\n    _effect.run();\n\n    const runner: any = _effect.run.bind(_effect);\n    runner.effect = _effect;\n    return runner;\n}\n\nexport function stop(runner) {\n    runner.effect.stop();\n}\n\n// 追踪依赖\nexport function track(target, type, key) {\n    console.log(`触发 track -> target: ${target} type: ${type} key:${key}`);\n    if (!activeEffect) return;\n    /*\n- WeakMap\n    key: object\n    value: map\n        - map\n        key: property\n        value: set\n        - set\n            [effect1、effect2]\n */\n    // 对象-属性-副作用\n    // 根据对象查找相应的属性\n    let depsMap = targetMap.get(target);\n    // 未找到则初始化，并赋值\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map()));\n    }\n    // 根据属性值查找对应的副作用函数\n    let dep = depsMap.get(key);\n    // 未找到则初始化，并赋值\n    if (!dep) {\n        depsMap.set(key, (dep = createDep()));\n    }\n    trackEffects(dep);\n}\n\n// 触发依赖\nexport function trigger(target, type, key) {\n    let deps: Array<any> = [];\n\n    const depsMap = targetMap.get(target);\n\n    const dep = depsMap.get(key);\n\n    deps.push(dep);\n\n    const effects: Array<any> = [];\n    deps.forEach((dep) => {\n        // 解构 dep 得到的是 dep 内部存储的 effect\n        effects.push(...dep);\n    });\n    triggerEffects(createDep(effects));\n}\n\nexport function triggerEffects(dep) {\n    for (const effect of dep) {\n        // 调度器存在，则把响应事件交给用户处理\n        if (effect.scheduler) {\n            effect.scheduler();\n        } else {\n            // 直接执行副作用函数\n            effect.run();\n        }\n    }\n}\n\nexport function trackEffects(dep) {\n    // 用 dep 存放 effect\n    let shouldTrack = false;\n    if (!activeEffect) return;\n\n    dep.add(activeEffect);\n    (activeEffect as any).deps.push(dep);\n}\n\nexport function isTracking() {\n    return activeEffect !== undefined;\n}\n\nfunction cleanupEffect(effect) {\n    // 找到所有依赖这个 effect 的响应式对象\n    // 从这些响应式对象里面把 effect 给删除掉\n    effect.deps.forEach((dep) => {\n        dep.delete(effect);\n    });\n    effect.deps.length = 0;\n}\n","import { track, trigger } from \"./effect\";\nimport {\n    ReactiveFlags,\n    reactive,\n    reactiveMap,\n    readonly,\n    readonlyMap,\n    shallowReadonlyMap,\n} from \"./reactive\";\nimport { isObject } from \"../../shared/index\";\nconst get = createGetter();\nconst set = createSetter();\n\nfunction createGetter(isReadonly = false, shallow = false) {\n    return function get(target, key, receiver) {\n        // console.log(\n        //     \"Proxy get 函数触发了. target:\",\n        //     JSON.stringify(target),\n        //     \"key: \",\n        //     key\n        // );\n\n        // reactive 原始值\n        const isExistInReactiveMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === reactiveMap.get(target)\n            );\n        };\n\n        // readonly 原始值\n        const isExistInReadonlyMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === readonlyMap.get(target)\n            );\n        };\n\n        // shallowReadonly 原始值\n        const isExistInshallowReadonlyMap = () => {\n            return (\n                key === ReactiveFlags.RAW &&\n                receiver === shallowReadonlyMap.get(target)\n            );\n        };\n\n        // 是否是 reactive\n        if (key === ReactiveFlags.IS_REACTIVE) {\n            // 判断 reactive 类型\n            return !isReadonly;\n        } else if (key === ReactiveFlags.IS_READONLY) {\n            // 是否是 readonly\n            return isReadonly;\n        } else if (\n            isExistInReactiveMap() ||\n            isExistInReadonlyMap() ||\n            isExistInshallowReadonlyMap()\n        ) {\n            // 获取原始值\n            return target;\n        }\n        // 反射\n        const res = Reflect.get(target, key, receiver);\n\n        // shallowReadonly\n        if (shallow) {\n            return res;\n        }\n        if (isObject(res)) {\n            return isReadonly ? readonly(res) : reactive(res);\n        }\n        if (!isReadonly) {\n            // 注入追踪依赖\n            track(target, \"get\", key);\n        }\n        // 返回值\n        return res;\n    };\n}\n\nfunction createSetter() {\n    return function set(target, key, value, receiver) {\n        // console.log(\n        //     \"Proxy set 函数触发了. target:\",\n        //     JSON.stringify(target),\n        //     \" key: \",\n        //     key,\n        //     \" value: \",\n        //     value\n        // );\n        // 反射\n        const res = Reflect.set(target, key, value, receiver);\n        // 注入执行依赖\n        trigger(target, \"set\", key);\n        // 返回值\n        return res;\n    };\n}\n\nexport const mutableHandlers = {\n    get,\n    set,\n};\n\nexport const readonlyHandlers = {\n    get: createGetter(true),\n    set(target, key) {\n        console.warn(\n            `Set operation on key \"${String(key)}\" failed target is readonly.`\n        );\n        return true;\n    },\n};\n\nexport const shallowReadonlyHandlers = {\n    get: createGetter(true, true),\n    set(target, key) {\n        console.warn(\n            `Set operation on key \"${String(\n                key\n            )}\" failed: target is shallowReadonly.`,\n            target\n        );\n        return true;\n    },\n};\n","// Vue3.x 的 reactivity 就是基于 Proxy 来实现的\n// 通过监听 get 和 set\n// 在 get 中收集副作用函数\n// 在 set 中执行副作用函数\nimport { readBuilderProgram } from \"typescript\";\nimport {\n    mutableHandlers,\n    readonlyHandlers,\n    shallowReadonlyHandlers,\n} from \"./baseHandlers\";\n\nexport const reactiveMap = new WeakMap();\nexport const readonlyMap = new WeakMap();\nexport const shallowReadonlyMap = new WeakMap();\n\nexport const enum ReactiveFlags {\n    IS_REACTIVE = \"__v_isReactive\",\n    IS_READONLY = \"__v_isReadonly\",\n    RAW = \"__v_raw\",\n}\n\nexport function reactive(target) {\n    return createReactiveObject(target, reactiveMap, mutableHandlers);\n}\n\nexport function readonly(target) {\n    return createReactiveObject(target, readonlyMap, readonlyHandlers);\n}\n\nexport function shallowReadonly(target) {\n    return createReactiveObject(\n        target,\n        shallowReadonlyMap,\n        shallowReadonlyHandlers\n    );\n}\n\nexport function isProxy(value) {\n    return isReactive(value) || isReadonly(value);\n}\n\nexport function isReadonly(value) {\n    return !!value[ReactiveFlags.IS_READONLY];\n}\n\nexport function isReactive(value) {\n    // value 是 proxy, 会触发 get 操作\n    // value 是 普通对象的话 会返回 undefined，转成布尔值\n    return !!value[ReactiveFlags.IS_REACTIVE];\n}\n\nexport function toRaw(value) {\n    // value 为 proxy 时，直接返回\n    // value 为普通对象，返回普通对象\n    // 只要不是 proxy，只要得到的 undefined，那么一定是普通对象\n    if (!value[ReactiveFlags.RAW]) {\n        return value;\n    }\n    return value[ReactiveFlags.RAW];\n}\n\nfunction createReactiveObject(target, proxyMap, baseHandlers) {\n    // 根据源数据获取对应的 proxy\n    const existingProxy = proxyMap.get(target);\n    if (existingProxy) {\n        // 返回已存在的 proxy\n        return existingProxy;\n    }\n    // 根据源数据新建 proxy\n    const proxy = new Proxy(target, baseHandlers);\n    // 源数据 - proxy 存入容器中\n    proxyMap.set(target, proxy);\n    // 返回 proxy\n    return proxy;\n}\n\n// 1. 调用 reactive 并传入 {}\n// 2. 调用 createReactiveObject 并传入 target 和 proxyMap\n//      2.1 根据 target 在 proxyMap 中查找对应的 proxy\n//          - 查找到对应的 proxy 直接返回\n// - 未查找，生成一个 proxy\n","import { trackEffects, triggerEffects, isTracking } from \"./effect\";\nimport { createDep } from \"./dep\";\nimport { isObject, hasChanged } from \"../../shared\";\nimport { reactive } from \"./reactive\";\n\nexport class RefImpl {\n    private _rawValue: any;\n    private _value: any;\n    public dep;\n    public __v_isRef = true\n\n    constructor(value) {\n        // 原始值\n        this._rawValue = value;\n        // 如果 value 是一个对象，则需要用 reactive 来包裹\n        this._value = convert(value);\n        this.dep = createDep();\n    }\n\n    get value() {\n        // 收集依赖\n        trackRefValue(this);\n        return this._value;\n    }\n\n    set value(newValue) {\n        // 当新值不等于老值的话，那么才触发依赖\n        if (hasChanged(newValue, this._rawValue)) {\n            // 更新值\n            this._value = convert(newValue);\n            this._rawValue = newValue;\n            // 触发依赖\n            triggerRefValue(this);\n        }\n    }\n}\n\n// Ref 对外暴露的简便方法\nexport function ref(value) {\n    return createRef(value);\n}\n\n// 创建 Ref\nfunction createRef(value) {\n    const ref = new RefImpl(value);\n    return ref;\n}\n\nfunction convert(value) {\n    // 如果是对象则通过 reactive 创建\n    return isObject(value) ? reactive(value) : value;\n}\n\nexport function trackRefValue(ref) {\n    if (isTracking()) {\n        trackEffects(ref.dep);\n    }\n}\n\nexport function triggerRefValue(ref) {\n    triggerEffects(ref.dep);\n}\n\n\n// 解构 ref\nconst shallowUnwrapHandlers = {\n    get(target, key, receiver) {\n        const res = Reflect.get(target, key, receiver)\n        return unRef(ref)\n    },\n    set(target, key, value, receiver) {\n        const oldValue = target[key]\n        if (isRef(oldValue) && !isRef(value)) {\n            return (target[key].value = value)\n        } else {\n            return Reflect.set(target, key, value, receiver)\n        }\n    }\n}\n\nexport function proxyRefs(objectWithRefs) {\n    return new Proxy(objectWithRefs, shallowUnwrapHandlers)\n}\n\n// 把 ref 里面的值拿到\nexport function unRef(ref) {\n    return isRef(ref) ? ref.value : ref\n}\n\nexport function isRef(value) {\n    return value.__v_isRef\n}\n","import { createDep } from \"./dep\";\nimport { ReactiveEffect } from \"./effect\";\nimport { trackRefValue, triggerRefValue } from \"./ref\";\n\nexport class ComputedRefImpl {\n    // 依赖收集容器\n    public dep: any\n    // 副作用函数\n    public effect: ReactiveEffect\n\n    // 缓存标识\n    private _dirty: boolean\n    private _value\n\n    constructor(getter) {\n        this._dirty = true\n        this._value = null\n        this.dep = createDep()\n        this.effect = new ReactiveEffect(getter, () => {\n            if (this._dirty) return\n\n            this._dirty = false\n            triggerRefValue(this)\n        })\n    }\n\n    get value() {\n        // 收集依赖\n        trackRefValue(this)\n        // 锁上，只可以调用一次\n        // 当数据改变的时候才会解锁\n        // 这里就是缓存实现的核心\n        // 解锁是在 scheduler 里面做的\n        if (this._dirty) {\n            this._dirty = false\n            // 执行 run\n            this._value = this.effect.run()\n        }\n        return this._value\n    }\n}\n\nexport function computed(getter) {\n    return new ComputedRefImpl(getter)\n}"],"names":[],"mappings":"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"}